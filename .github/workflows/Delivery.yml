name: Delivery
on:
  pull_request:
    types:
      - opened
    branches:
      - 'main'
jobs:
  terrabuild:
    runs-on: ubuntu-20.04
    outputs:
      exitcode: ${{ steps.apply.outputs.exitcode }}
    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: 0
      GOOGLE_CREDENTIALS: key.json
    steps:
      - name: Checkout terraform code
        uses: actions/checkout@v3
        with:
          repository: RaphaeldeGail/probable-packer-infra
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 1.1.2
          terraform_wrapper: true
      - name: Create the backend configuration file
        env:
          BACKEND_CONFIG: ${{ secrets.TF_BACKEND_CONFIG }}
        run: |
          echo $BACKEND_CONFIG | base64 --decode > config.bucket.tfbackend
      - name: Create GCP authentication key.json
        env:
          CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: echo $CREDENTIALS | base64 --decode > ${{ env.GOOGLE_CREDENTIALS }}
      - name: Initialize Terraform working directory
        run: terraform init -reconfigure -no-color -backend-config=config.bucket.tfbackend
      - name: Plan infrastructure update
        env:
          TF_VAR_workspace: ${{ secrets.WORKSPACE }}
        run: terraform plan -no-color -out plan.out
      - name: Apply infrastructure update
        id: apply
        run: terraform apply -no-color plan.out
  packer:
    runs-on: ubuntu-20.04
    container:
      image: raphaeldegail/packer:1.8.0
    needs: [terrabuild]
    if: needs.terrabuild.outputs.exitcode == 0
    env:
      GOOGLE_APPLICATION_CREDENTIALS: key.json
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Initialize packer with plugins
        run: packer init .
      - name: Create GCP authentication key.json
        env:
          CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: echo $CREDENTIALS | base64 --decode > ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Build Packer image
        env:
          PKR_VAR_workspace: ${{ secrets.WORKSPACE }}
          PKR_VAR_machine: ${{ secrets.MACHINE }}
          PKR_VAR_skip_create_image: false
        run: packer build -color=false .
  clean:
    runs-on: ubuntu-20.04
    needs: [packer]
    if: ${{ always() }}
    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: 0
      GOOGLE_CREDENTIALS: key.json
    steps:
      - name: Checkout terraform code
        uses: actions/checkout@v3
        with:
          repository: RaphaeldeGail/probable-packer-infra
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 1.1.2
          terraform_wrapper: true
      - name: Create the backend configuration file
        env:
          BACKEND_CONFIG: ${{ secrets.TF_BACKEND_CONFIG }}
        run: |
          echo $BACKEND_CONFIG | base64 --decode > config.bucket.tfbackend
      - name: Create GCP authentication key.json
        env:
          CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: echo $CREDENTIALS | base64 --decode > ${{ env.GOOGLE_CREDENTIALS }}
      - name: Initialize Terraform working directory
        run: terraform init -reconfigure -no-color -backend-config=config.bucket.tfbackend
      - name: Plan infrastructure destroy
        env:
          TF_VAR_workspace: ${{ secrets.WORKSPACE }}
        run: terraform plan -no-color -destroy -out destroy.out
      - name: Apply infrastructure destruction
        run: terraform apply -no-color destroy.out